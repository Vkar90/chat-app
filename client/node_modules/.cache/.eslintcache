[{"/Users/VKardamitsis/Projects/chat-app/client/src/index.js":"1","/Users/VKardamitsis/Projects/chat-app/client/src/components/App.js":"2","/Users/VKardamitsis/Projects/chat-app/client/src/components/Login.js":"3","/Users/VKardamitsis/Projects/chat-app/client/src/hooks/useLocalStorage.js":"4","/Users/VKardamitsis/Projects/chat-app/client/src/components/Dashboard.js":"5","/Users/VKardamitsis/Projects/chat-app/client/src/components/Sidebar.js":"6","/Users/VKardamitsis/Projects/chat-app/client/src/components/Conversations.js":"7","/Users/VKardamitsis/Projects/chat-app/client/src/components/Contacts.js":"8","/Users/VKardamitsis/Projects/chat-app/client/src/components/NewConversationModal.js":"9","/Users/VKardamitsis/Projects/chat-app/client/src/components/NewContactModal.js":"10","/Users/VKardamitsis/Projects/chat-app/client/src/contexts/ContactsProvider.js":"11","/Users/VKardamitsis/Projects/chat-app/client/src/contexts/ConversationsProvider.js":"12"},{"size":257,"mtime":1625052531421,"results":"13","hashOfConfig":"14"},{"size":611,"mtime":1625055019573,"results":"15","hashOfConfig":"14"},{"size":953,"mtime":1625047007986,"results":"16","hashOfConfig":"14"},{"size":663,"mtime":1625046889045,"results":"17","hashOfConfig":"14"},{"size":230,"mtime":1625049317678,"results":"18","hashOfConfig":"14"},{"size":2215,"mtime":1625049889921,"results":"19","hashOfConfig":"14"},{"size":145,"mtime":1625048972186,"results":"20","hashOfConfig":"14"},{"size":405,"mtime":1625053830868,"results":"21","hashOfConfig":"14"},{"size":1748,"mtime":1625054932579,"results":"22","hashOfConfig":"14"},{"size":1166,"mtime":1625050599896,"results":"23","hashOfConfig":"14"},{"size":596,"mtime":1625053910052,"results":"24","hashOfConfig":"14"},{"size":689,"mtime":1625054910801,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"80qiy4",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/Users/VKardamitsis/Projects/chat-app/client/src/index.js",[],"/Users/VKardamitsis/Projects/chat-app/client/src/components/App.js",["53"],"import React from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport  Login from './Login'\nimport Dashboard from './Dashboard'\nimport {ContactsProvider} from '../contexts/ContactsProvider'\nimport {ConversationsProvider} from '../contexts/ConversationsProvider'\n\nfunction App() {\n  const [id, setId] = useLocalStorage()\n\n  const dashboard=(\n    <ContactsProvider>\n      <ConversationsProvider>\n        <Dashboard id={id} />\n        </ConversationsProvider>\n    </ContactsProvider>\n  )\n\n  return (\n      id ? <Dashboard id={id} /> :  <Login onIdSubmit = {setId} />\n  )\n}\n\nexport default App;\n","/Users/VKardamitsis/Projects/chat-app/client/src/components/Login.js",[],["54","55"],"/Users/VKardamitsis/Projects/chat-app/client/src/hooks/useLocalStorage.js",[],"/Users/VKardamitsis/Projects/chat-app/client/src/components/Dashboard.js",[],"/Users/VKardamitsis/Projects/chat-app/client/src/components/Sidebar.js",[],"/Users/VKardamitsis/Projects/chat-app/client/src/components/Conversations.js",[],"/Users/VKardamitsis/Projects/chat-app/client/src/components/Contacts.js",[],"/Users/VKardamitsis/Projects/chat-app/client/src/components/NewConversationModal.js",["56"],"import React, {useState} from 'react'\nimport { Modal, Form, Button } from 'react-bootstrap'\nimport Contacts from './Contacts'\nimport { useContacts } from '../contexts/ContactsProvider'\nimport {useConversations} from '../contexts/ConversationsProvider'\n\nexport default function NewConversationModal({closeModal}) {\n\n    const [selectedContactIds, setSelectedContactIds] = useState([])\n    const { contacts } = useContacts()\n    const {createConversation} = useConversations()\n\n    function handleSubmit(e) {\n        e.preventDefault()\n\n        createConversation(selectedContactIds)\n        closeModal()\n    }\n\n    function handleCheckboxChange(contactId){\n        setSelectedContactIds(prevSelectedContactIds => {\n            if (prevSelectedContactIds.includes(contactId)){\n                return prevSelectedContactIds.filter(prevId => {\n                    return contactId !== prevId\n                })\n            }else {\n                return [...prevSelectedContactIds, contactId]\n            }\n        })\n    }\n\n    return (\n        <>\n          <Modal.Header closeButton>Create Conversation</Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                    {Contacts.map(contact => (\n                        <Form.Group controlId={contact.id} key={contact.id}>\n                            <Form.Check\n                            type=\"checkbox\"\n                            value={selectedContactIds.includes(contact.id)} label={contact.name}onChange={() => handleCheckboxChange(contact.id)}></Form.Check>\n                        </Form.Group>\n                    ))}\n                    <Button type=\"submit\">Create</Button>\n                </Form>\n            </Modal.Body>  \n        </>\n    )\n}\n","/Users/VKardamitsis/Projects/chat-app/client/src/components/NewContactModal.js",[],"/Users/VKardamitsis/Projects/chat-app/client/src/contexts/ContactsProvider.js",[],"/Users/VKardamitsis/Projects/chat-app/client/src/contexts/ConversationsProvider.js",[],{"ruleId":"57","severity":1,"message":"58","line":11,"column":9,"nodeType":"59","messageId":"60","endLine":11,"endColumn":18},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"57","severity":1,"message":"65","line":10,"column":13,"nodeType":"59","messageId":"60","endLine":10,"endColumn":21},"no-unused-vars","'dashboard' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"'contacts' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]