{"ast":null,"code":"var _jsxFileName = \"/Users/VKardamitsis/Projects/chat-app/client/src/contexts/ContactsProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactsContext = /*#__PURE__*/React.createContext();\nexport function useContacts() {\n  return userContext(ContactsContext);\n}\nexport function ContactsProvider({\n  children\n}) {\n  _s();\n\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n\n  function createContacts(id, name) {\n    setContacts(prevContacts => {\n      return [...prevContacts, {\n        id,\n        name\n      }];\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ContactsContext.Provider, {\n      value: {\n        contacts,\n        createContact\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContactsProvider, \"aWfzfaPwLedoIhPywC4kgPBb+0k=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = ContactsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsProvider\");","map":{"version":3,"sources":["/Users/VKardamitsis/Projects/chat-app/client/src/contexts/ContactsProvider.js"],"names":["React","useContext","useLocalStorage","ContactsContext","createContext","useContacts","userContext","ContactsProvider","children","contacts","setContacts","createContacts","id","name","prevContacts","createContact"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;AAEA,MAAMC,eAAe,gBAAEH,KAAK,CAACI,aAAN,EAAvB;AAEA,OAAO,SAASC,WAAT,GAAsB;AACzB,SAAOC,WAAW,CAACH,eAAD,CAAlB;AACH;AAED,OAAO,SAASI,gBAAT,CAA0B;AAACC,EAAAA;AAAD,CAA1B,EAAsC;AAAA;;AACzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA2BR,eAAe,CAAC,UAAD,EAAa,EAAb,CAAhD;;AAGA,WAASS,cAAT,CAAwBC,EAAxB,EAA4BC,IAA5B,EAAiC;AAC7BH,IAAAA,WAAW,CAACI,YAAY,IAAI;AACxB,aAAO,CAAC,GAAGA,YAAJ,EAAkB;AAACF,QAAAA,EAAD;AAAKC,QAAAA;AAAL,OAAlB,CAAP;AACH,KAFU,CAAX;AAGH;;AAED,sBACI;AAAA,2BACI,QAAC,eAAD,CAAiB,QAAjB;AAA0B,MAAA,KAAK,EAAE;AAACJ,QAAAA,QAAD;AAAWM,QAAAA;AAAX,OAAjC;AAAA,gBACKP;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAjBeD,gB;UACqBL,e;;;KADrBK,gB","sourcesContent":["import React, {useContext} from 'react'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nconst ContactsContext= React.createContext()\n\nexport function useContacts(){\n    return userContext(ContactsContext)\n}\n\nexport function ContactsProvider({children}) {\n    const [contacts, setContacts]  = useLocalStorage('contacts', []\n    )\n\n    function createContacts(id, name){\n        setContacts(prevContacts => {\n            return [...prevContacts, {id, name}]\n        })\n    }\n\n    return (\n        <div>\n            <ContactsContext.Provider value={{contacts, createContact}}>\n                {children}\n            </ContactsContext.Provider>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}