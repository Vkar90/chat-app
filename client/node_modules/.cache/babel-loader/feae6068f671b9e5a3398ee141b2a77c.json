{"ast":null,"code":"var _jsxFileName = \"/Users/VKardamitsis/Projects/chat-app/client/src/components/OpenConversation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\nimport { useConversations } from '../contexts/ConversationsProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OpenConversation() {\n  _s();\n\n  const [text, setText] = useState('');\n  const lastMessageRef = useRef();\n  const {\n    sendMessage,\n    selectedConversation\n  } = useConversations();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    sendMessage(selectedConversation.recipients.map(r => r.id), text);\n    setText('');\n  }\n\n  useEffect(() => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollIntoView({\n        smooth: true\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column flex-grow-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 overflow-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column align-items-start justify-content-end px-3\",\n        children: selectedConversation.messages.map((message, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `my-1 d-flex flex-column ${message.fromMe ? 'align-self-end' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `rounded px-2 py-1 ${message.fromMe ? 'bg-primary text-white' : 'border'}`,\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `text-muted small ${message.fromMe ? 'text-right' : ''}`,\n              children: message.fromMe ? 'You' : message.senderName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"m-2\",\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            required: true,\n            value: text,\n            onChange: e => setText(e.target.value),\n            style: {\n              height: '75px',\n              resize: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"m-2\",\n              type: \"submit\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OpenConversation, \"yZ3vRR0gfOcX5yFTMV85qW7j2s8=\", false, function () {\n  return [useConversations];\n});\n\n_c = OpenConversation;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpenConversation\");","map":{"version":3,"sources":["/Users/VKardamitsis/Projects/chat-app/client/src/components/OpenConversation.js"],"names":["React","useState","useRef","useEffect","Form","InputGroup","Button","useConversations","OpenConversation","text","setText","lastMessageRef","sendMessage","selectedConversation","handleSubmit","e","preventDefault","recipients","map","r","id","current","scrollIntoView","smooth","messages","message","index","fromMe","senderName","target","value","height","resize"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,QAAyC,iBAAzC;AACA,SAASC,gBAAT,QAAiC,mCAAjC;;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMU,cAAc,GAAGT,MAAM,EAA7B;AACA,QAAM;AAAEU,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAwCN,gBAAgB,EAA9D;;AAEA,WAASO,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AAEAJ,IAAAA,WAAW,CAACC,oBAAoB,CAACI,UAArB,CAAgCC,GAAhC,CAAoCC,CAAC,IAAIA,CAAC,CAACC,EAA3C,CAAD,EACXX,IADW,CAAX;AAGAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH;;AAEDP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,cAAc,CAACU,OAAnB,EAA2B;AACvBV,MAAAA,cAAc,CAACU,OAAf,CAAuBC,cAAvB,CAAsC;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAtC;AACH;AACJ,GAJQ,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,+DAAf;AAAA,kBACKV,oBAAoB,CAACW,QAArB,CAA8BN,GAA9B,CAAkC,CAACO,OAAD,EAAUC,KAAV,KAAoB;AACnD,8BACI;AAEI,YAAA,SAAS,EAAG,2BAA0BD,OAAO,CAACE,MAAR,GAAiB,gBAAjB,GAAqC,EAAG,EAFlF;AAAA,oCAGQ;AAAM,cAAA,SAAS,EAAG,qBAAoBF,OAAO,CAACE,MAAR,GAAiB,uBAAjB,GAA2C,QAAS,EAA1F;AAAA,wBACKF,OAAO,CAAChB;AADb;AAAA;AAAA;AAAA;AAAA,oBAHR,eAKQ;AAAK,cAAA,SAAS,EAAG,oBAAmBgB,OAAO,CAACE,MAAR,GAAiB,YAAjB,GAAgC,EAAG,EAAvE;AAAA,wBACKF,OAAO,CAACE,MAAR,GAAiB,KAAjB,GAAyBF,OAAO,CAACG;AADtC;AAAA;AAAA;AAAA;AAAA,oBALR;AAAA,aACSF,KADT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAWH,SAZA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAkBI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEZ,YAAhB;AAAA,6BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,KAAtB;AAAA,+BACI,QAAC,UAAD;AAAA,kCACA,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,EAAE,EAAC,UAAjB;AAA4B,YAAA,QAAQ,MAApC;AAAqC,YAAA,KAAK,EAAEL,IAA5C;AAAkD,YAAA,QAAQ,EAAEM,CAAC,IAAIL,OAAO,CAACK,CAAC,CAACc,MAAF,CAASC,KAAV,CAAxE;AAA0F,YAAA,KAAK,EAAE;AAACC,cAAAA,MAAM,EAAE,MAAT;AAAiBC,cAAAA,MAAM,EAAE;AAAzB;AAAjG;AAAA;AAAA;AAAA;AAAA,kBADA,eAGA,QAAC,UAAD,CAAY,MAAZ;AAAA,mCACA,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,KAAlB;AAAuB,cAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GAnDuBxB,gB;UAG0BD,gB;;;KAH1BC,gB","sourcesContent":["import React, {useState, useRef, useEffect} from 'react'\nimport { Form, InputGroup, Button } from 'react-bootstrap'\nimport { useConversations } from '../contexts/ConversationsProvider';\n\nexport default function OpenConversation() {\n    const [text, setText] = useState('')\n    const lastMessageRef = useRef()\n    const { sendMessage, selectedConversation } = useConversations();\n\n    function handleSubmit(e) {\n        e.preventDefault()\n\n        sendMessage(selectedConversation.recipients.map(r => r.id),\n        text\n        )\n        setText('')\n    }\n\n    useEffect(() => {\n        if (lastMessageRef.current){\n            lastMessageRef.current.scrollIntoView({smooth: true})\n        }\n    },)\n\n    return (\n        <div className=\"d-flex flex-column flex-grow-1\">\n            <div className=\"flex-grow-1 overflow-auto\">\n                <div className=\"d-flex flex-column align-items-start justify-content-end px-3\">\n                    {selectedConversation.messages.map((message, index) => {\n                        return (\n                            <div\n                                key={index}\n                                className={`my-1 d-flex flex-column ${message.fromMe ? 'align-self-end' :  ''}`}>\n                                    <div  className={`rounded px-2 py-1 ${message.fromMe ? 'bg-primary text-white' : 'border'}`}>\n                                        {message.text}</div>\n                                    <div className={`text-muted small ${message.fromMe ? 'text-right' : ''}`}>\n                                        {message.fromMe ? 'You' : message.senderName}\n                                    </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n            <Form onSubmit={handleSubmit}>\n                <Form.Group className='m-2'>\n                    <InputGroup>\n                    <Form.Control as='textarea' required value={text} onChange={e => setText(e.target.value)} style={{height: '75px', resize: 'none'}}>\n                    </Form.Control>\n                    <InputGroup.Append>\n                    <Button className=\"m-2\"type='submit'>Send</Button></InputGroup.Append>\n                    </InputGroup>\n                </Form.Group>\n            </Form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}