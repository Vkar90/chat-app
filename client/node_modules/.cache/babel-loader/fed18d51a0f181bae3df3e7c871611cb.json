{"ast":null,"code":"var _jsxFileName = \"/Users/VKardamitsis/Projects/chat-app/client/src/components/NewConversationModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport Contacts from './Contacts';\nimport { useContacts } from '../contexts/ContactsProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewConversationModal() {\n  _s();\n\n  const [selectedContactIds, setSelectedContactIds] = useState([]);\n  const {\n    contacts\n  } = useContacts();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    closeModal();\n  }\n\n  function handleCheckboxChange(contactId) {\n    setSelectedContactIds(prevSelectedContactIds => {\n      if (prevSelectedContactIds.includes(contactId)) {\n        return prevSelectedContactIds.filter(prevId => {\n          return contactId !== prevId;\n        });\n      } else {\n        return [...prevSelectedContactIds, contactId];\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: \"Create Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [Contacts.map(contact => /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: contact.id,\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            value: selectedContactIds.includes(contact.id),\n            label: contact.name,\n            onChange: () => handleCheckboxChange(contact.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)\n        }, contact.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewConversationModal, \"jyVAAT9DmIMoVc+PVu4ehBok27w=\", false, function () {\n  return [useContacts];\n});\n\n_c = NewConversationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewConversationModal\");","map":{"version":3,"sources":["/Users/VKardamitsis/Projects/chat-app/client/src/components/NewConversationModal.js"],"names":["React","useState","Modal","Form","Button","Contacts","useContacts","NewConversationModal","selectedContactIds","setSelectedContactIds","contacts","handleSubmit","e","preventDefault","closeModal","handleCheckboxChange","contactId","prevSelectedContactIds","includes","filter","prevId","map","contact","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,iBAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,8BAA5B;;;AAEA,eAAe,SAASC,oBAAT,GAAgC;AAAA;;AAE3C,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CR,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM;AAAES,IAAAA;AAAF,MAAeJ,WAAW,EAAhC;;AAEA,WAASK,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,UAAU;AACb;;AAED,WAASC,oBAAT,CAA8BC,SAA9B,EAAwC;AACpCP,IAAAA,qBAAqB,CAACQ,sBAAsB,IAAI;AAC5C,UAAIA,sBAAsB,CAACC,QAAvB,CAAgCF,SAAhC,CAAJ,EAA+C;AAC3C,eAAOC,sBAAsB,CAACE,MAAvB,CAA8BC,MAAM,IAAI;AAC3C,iBAAOJ,SAAS,KAAKI,MAArB;AACH,SAFM,CAAP;AAGH,OAJD,MAIM;AACF,eAAO,CAAC,GAAGH,sBAAJ,EAA4BD,SAA5B,CAAP;AACH;AACJ,KARoB,CAArB;AASH;;AAED,sBACI;AAAA,4BACE,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEI,QAAC,KAAD,CAAO,IAAP;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEL,YAAhB;AAAA,mBACKN,QAAQ,CAACgB,GAAT,CAAaC,OAAO,iBACjB,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAEA,OAAO,CAACC,EAA/B;AAAA,iCACI,QAAC,IAAD,CAAM,KAAN;AACA,YAAA,IAAI,EAAC,UADL;AAEA,YAAA,KAAK,EAAEf,kBAAkB,CAACU,QAAnB,CAA4BI,OAAO,CAACC,EAApC,CAFP;AAEgD,YAAA,KAAK,EAAED,OAAO,CAACE,IAF/D;AAEoE,YAAA,QAAQ,EAAE,MAAMT,oBAAoB,CAACO,OAAO,CAACC,EAAT;AAFxG;AAAA;AAAA;AAAA;AAAA;AADJ,WAAwCD,OAAO,CAACC,EAAhD;AAAA;AAAA;AAAA;AAAA,gBADH,CADL,eAQI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAiBH;;GAxCuBhB,oB;UAGCD,W;;;KAHDC,oB","sourcesContent":["import React, {useState} from 'react'\nimport { Modal, Form, Button } from 'react-bootstrap'\nimport Contacts from './Contacts'\nimport { useContacts } from '../contexts/ContactsProvider'\n\nexport default function NewConversationModal() {\n\n    const [selectedContactIds, setSelectedContactIds] = useState([])\n    const { contacts } = useContacts()\n\n    function handleSubmit(e) {\n        e.preventDefault()\n\n        closeModal()\n    }\n\n    function handleCheckboxChange(contactId){\n        setSelectedContactIds(prevSelectedContactIds => {\n            if (prevSelectedContactIds.includes(contactId)){\n                return prevSelectedContactIds.filter(prevId => {\n                    return contactId !== prevId\n                })\n            }else {\n                return [...prevSelectedContactIds, contactId]\n            }\n        })\n    }\n\n    return (\n        <>\n          <Modal.Header closeButton>Create Conversation</Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                    {Contacts.map(contact => (\n                        <Form.Group controlId={contact.id} key={contact.id}>\n                            <Form.Check\n                            type=\"checkbox\"\n                            value={selectedContactIds.includes(contact.id)} label={contact.name}onChange={() => handleCheckboxChange(contact.id)}></Form.Check>\n                        </Form.Group>\n                    ))}\n                    <Button type=\"submit\">Create</Button>\n                </Form>\n            </Modal.Body>  \n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}